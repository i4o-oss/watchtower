version: '3.8'

# Production Docker Compose configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  postgres:
    image: postgres:16-alpine
    container_name: watchtower-postgres-prod
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-watchtower}
      POSTGRES_USER: ${DB_USER:-watchtower}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    # Don't expose ports in production - only internal access
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-watchtower} -d ${DB_NAME:-watchtower}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - watchtower-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
      - /var/lock

  redis:
    image: redis:7-alpine
    container_name: watchtower-redis-prod
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_prod_data:/data
    # Don't expose ports in production
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - watchtower-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  watchtower:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: runtime
    container_name: watchtower-app-prod
    env_file:
      - .env
    environment:
      # Production environment variables (use external .env file)
      GO_ENV: production
      
      # Database (override for container networking)
      DB_HOST: postgres
      DB_PORT: 5432
      
      # Redis (override for container networking)
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - watchtower-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    # Production security settings
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/tmp
    # Logging configuration for production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  watchtower-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: watchtower-br0